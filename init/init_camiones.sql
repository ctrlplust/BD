-- =====================================================
--   init_camiones.sql
--   ESQUEMA BASE del SIGCOB (Banco Futura)
--   Crea TODAS las tablas, claves foráneas e índices
--   NO inserta datos de negocio
-- =====================================================

BEGIN;

-- 1) Tablas maestras
CREATE TABLE IF NOT EXISTS region (
    id_region   INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre      VARCHAR(255) NOT NULL,
    pais        VARCHAR(255) NOT NULL,
    CONSTRAINT uq_region_nombre_pais UNIQUE (nombre, pais)
);

CREATE TABLE IF NOT EXISTS gerentesucursal (
    id_gerente  INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre      VARCHAR(255) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS tipoejecutivo (
    id_tipo     INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre_tipo VARCHAR(100) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS productocategoria (
    id_categoria     INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre_categoria VARCHAR(150) NOT NULL UNIQUE
);

-- Canal de venta (Mesón, Web, App, Call Center)
CREATE TABLE IF NOT EXISTS canal (
    id_canal INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre   VARCHAR(100) NOT NULL UNIQUE
);

-- 2) Sucursales
CREATE TABLE IF NOT EXISTS sucursal (
    id_sucursal INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre      VARCHAR(255) NOT NULL,
    direccion   VARCHAR(255) NOT NULL,
    id_region   INT NOT NULL,
    id_gerente  INT NOT NULL,  -- Removido UNIQUE: un gerente puede tener múltiples sucursales
    CONSTRAINT fk_sucursal_region
        FOREIGN KEY (id_region) REFERENCES region(id_region)
        ON UPDATE CASCADE ON DELETE RESTRICT,
    CONSTRAINT fk_sucursal_gerente
        FOREIGN KEY (id_gerente) REFERENCES gerentesucursal(id_gerente)
        ON UPDATE CASCADE ON DELETE RESTRICT,
    CONSTRAINT uq_sucursal_nombre_region UNIQUE (nombre, id_region)
);

-- 3) Productos
CREATE TABLE IF NOT EXISTS producto (
    id_producto     INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre_producto VARCHAR(255) NOT NULL UNIQUE,
    id_categoria    INT NOT NULL,
    CONSTRAINT fk_producto_categoria
        FOREIGN KEY (id_categoria) REFERENCES productocategoria(id_categoria)
        ON UPDATE CASCADE ON DELETE RESTRICT
);

-- 4) Ejecutivos
CREATE TABLE IF NOT EXISTS ejecutivo (
    id_ejecutivo INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre       VARCHAR(255) NOT NULL,
    rut          VARCHAR(20)  NOT NULL UNIQUE,
    id_tipo      INT NOT NULL,
    id_sucursal  INT NOT NULL,
    CONSTRAINT fk_ejecutivo_tipo
        FOREIGN KEY (id_tipo) REFERENCES tipoejecutivo(id_tipo)
        ON UPDATE CASCADE ON DELETE RESTRICT,
    CONSTRAINT fk_ejecutivo_sucursal
        FOREIGN KEY (id_sucursal) REFERENCES sucursal(id_sucursal)
        ON UPDATE CASCADE ON DELETE RESTRICT
);

-- 5) Clientes
CREATE TABLE IF NOT EXISTS cliente (
    id_cliente   INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre       VARCHAR(255) NOT NULL,
    rut          VARCHAR(20)  NOT NULL UNIQUE,
    id_ejecutivo INT NULL,
    CONSTRAINT fk_cliente_ejecutivo
        FOREIGN KEY (id_ejecutivo) REFERENCES ejecutivo(id_ejecutivo)
        ON UPDATE CASCADE ON DELETE SET NULL
);

-- 6) Venta (con canal)
CREATE TABLE IF NOT EXISTS venta (
    id_venta     INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    fecha        DATE NOT NULL,
    monto        NUMERIC(12,2) NOT NULL CHECK (monto >= 0),
    id_cliente   INT NOT NULL,
    id_producto  INT NOT NULL,
    id_ejecutivo INT NOT NULL,
    id_canal     INT NOT NULL,
    CONSTRAINT fk_venta_cliente
        FOREIGN KEY (id_cliente) REFERENCES cliente(id_cliente)
        ON UPDATE CASCADE ON DELETE RESTRICT,
    CONSTRAINT fk_venta_producto
        FOREIGN KEY (id_producto) REFERENCES producto(id_producto)
        ON UPDATE CASCADE ON DELETE RESTRICT,
    CONSTRAINT fk_venta_ejecutivo
        FOREIGN KEY (id_ejecutivo) REFERENCES ejecutivo(id_ejecutivo)
        ON UPDATE CASCADE ON DELETE RESTRICT,
    CONSTRAINT fk_venta_canal
        FOREIGN KEY (id_canal) REFERENCES canal(id_canal)
        ON UPDATE CASCADE ON DELETE RESTRICT
);

-- 7) Meta
CREATE TABLE IF NOT EXISTS meta (
    id_meta        INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    periodo_inicio DATE NOT NULL,
    periodo_fin    DATE NOT NULL,
    cantidad_meta  INT NOT NULL CHECK (cantidad_meta >= 0),
    monto_meta     NUMERIC(12,2) NOT NULL CHECK (monto_meta >= 0),
    peso_ponderado NUMERIC(5,2) NOT NULL CHECK (peso_ponderado >= 0 AND peso_ponderado <= 100),
    id_ejecutivo   INT NOT NULL,
    id_categoria   INT NOT NULL,
    CONSTRAINT fk_meta_ejecutivo
        FOREIGN KEY (id_ejecutivo) REFERENCES ejecutivo(id_ejecutivo)
        ON UPDATE CASCADE ON DELETE RESTRICT,
    CONSTRAINT fk_meta_categoria
        FOREIGN KEY (id_categoria) REFERENCES productocategoria(id_categoria)
        ON UPDATE CASCADE ON DELETE RESTRICT,
    CONSTRAINT chk_meta_fechas CHECK (periodo_fin > periodo_inicio)
);

-- 8) Índices
CREATE INDEX IF NOT EXISTS idx_sucursal_id_region    ON sucursal(id_region);
CREATE INDEX IF NOT EXISTS idx_sucursal_id_gerente   ON sucursal(id_gerente);
CREATE INDEX IF NOT EXISTS idx_producto_id_categoria ON producto(id_categoria);
CREATE INDEX IF NOT EXISTS idx_ejecutivo_id_tipo     ON ejecutivo(id_tipo);
CREATE INDEX IF NOT EXISTS idx_ejecutivo_id_sucursal ON ejecutivo(id_sucursal);
CREATE INDEX IF NOT EXISTS idx_cliente_id_ejecutivo  ON cliente(id_ejecutivo);
CREATE INDEX IF NOT EXISTS idx_venta_id_cliente      ON venta(id_cliente);
CREATE INDEX IF NOT EXISTS idx_venta_id_producto     ON venta(id_producto);
CREATE INDEX IF NOT EXISTS idx_venta_id_ejecutivo    ON venta(id_ejecutivo);
CREATE INDEX IF NOT EXISTS idx_venta_id_canal        ON venta(id_canal);
CREATE INDEX IF NOT EXISTS idx_meta_id_ejecutivo     ON meta(id_ejecutivo);
CREATE INDEX IF NOT EXISTS idx_meta_id_categoria     ON meta(id_categoria);

-- Única meta por (ejecutivo, categoría, período)
CREATE UNIQUE INDEX IF NOT EXISTS uq_meta_ejecutivo_categoria_periodo
  ON meta(id_ejecutivo, id_categoria, periodo_inicio, periodo_fin);

COMMIT;
